// Lookup field

.flexberry-lookup>.ui.input>.lookup-field {
  background: @lookupFieldBackground;
  border: @lookupFieldBorder;
  border-radius: @lookupFieldBorderRadius;
  padding-right: @lookupFieldRightPadding;
  pointer-events: all;
  width: 100% !important;

  &:focus {
    background: @lookupFieldBackground;
    border: @lookupFieldBorder;
  }

  &:hover {
    border: @lookupFieldHoverBorder;
  }

  &.disabled {
    background: @lookupFieldDisabledBackground;
    border: @lookupFieldDisabledBorder;
    pointer-events: none;
  }

  &.prompt:focus {
    background: @autocompleteFocusBackground;
    border: @lookupFieldFocusBorder;
  }
}

// Workaround for old themes compatibility
// Overriding "action" class

.flexberry-lookup>.ui.action.input:not([class*="left action"]) > input.lookup-field {
  border-top-right-radius: @lookupFieldBorderRadius !important;
  border-bottom-right-radius: @lookupFieldBorderRadius !important;
  border-right-color: @lookupFieldBorderColor !important;

  &.disabled {
    border-right-color: @lookupFieldDisabledBorderColor !important;
  }
  &:focus {
    border-right-color: @lookupFieldBorderColor !important;
  }
  &:hover {
    border-right-color: @lookupFieldHoverBorderColor !important;
  }
}

.flexberry-lookup.search>.ui.action.input:not([class*="left action"]) > input.lookup-field.prompt:focus {
    border-right-color: @lookupFieldFocusBorderColor !important;
}

/* Buttons */
.flexberry-lookup > .ui.input > .ui.button:not(.positive):not(.negative):not(.colored) {
  background: @lookupButtonBackground;
}

.flexberry-lookup > .ui.input > .ui.button {
  font-size: @lookupIconFontSize;
  position: relative;
  padding: @lookupButtonPadding;

  &:focus {
    border-color: transparent;
  }

  &.ui-clear {
    right: @lookupClearButtonRight;
  }

  &.ui-change {
    padding-right: @lookupChangeButtonPaddingRight;
    right: @lookupChangeButtonRight;
  }
  &.ui-preview {
    right: @lookupPreviewButtonRight;

    ~.ui-clear {
      right: @lookupClearButtonRightWithPreview;
    }

    ~.ui-change {
      right: @lookupChangeButtonRightWithPreview;
    }
  }  
}

// Icons
.flexberry-lookup > .ui.input > {
  .ui.button > .icon {
    font-family: @lookupIconFont;
    margin: @lookupIconMargin;
    height: @lookupIconHeight;
  }

  .remove.icon::before {
    content: "\e90e";
  }
  
  .change.icon::before {
    content: "\e91d";
  }
  
  .eye.icon::before {
    content: "\e917";
  }
}

.flexberry-lookup .ui.action.input:not([class*="left action"]) > .button:last-child {
  border-radius: 0;
}

/* Autocomplete */
.flexberry-lookup.ui.search>.results {
  margin: @autocompleteResultsMargin;
  width: @autocompleteResultsWidth;
  background: @autocompleteResultsBackground;
  border: @autocompleteResultsBorder;
}

.flexberry-lookup.ui.search>.results>.result {
  background: @autocompleteResultBackground;
  border-radius: @autocompleteResultBorderRadius;
  border: @autocompleteResultBorder;
  padding-bottom: @autocompleteResultBottomPadding;
  &:hover {
    background: @autocompleteResultHoverBackground;
  }
}

.flexberry-lookup.ui.search>.results>.result>.content {
  padding-bottom: @autocompleteResultContentBottomPadding;
  border-bottom: @autocompleteResultContentBottomBorder;
  > .title {
    font-family: @autocompleteResultTitleFont;
    font-size: @autocompleteResultTitleFontSize;
    font-weight: @autocompleteResultTitleFontWeight;
  }
}

.flexberry-lookup .flexberry-dropdown {
  width: 100%;
}

#lookup-list .flexberry-objectlistview {
  max-height: calc(~'100vh - 6.5em');
  .ui.secondary.menu.no-margin.flexberry-olv-toolbar {
    padding-top: 0;
  }
}

// For example dropdownClass
.flexberry-dropdown.search.selection.ember-view.ui.dropdown.blue {
  background: blue;
}