// Main
.ui.form.flexberry-vertical-form {
  background: @editBackground;
  padding: @flexEditFormPadding;
  padding-bottom: @distanceL;
  // TODO: Сделать нормально
  min-height: calc(~'100% - 30px - 1em');
}

.flexberry-content.ui.attached.segment {
  padding: @flexberryContentPadding;
}

.ui.main.container,
.stackable.grid.container {
  height: 100%
}

// Headers
.ui.main.container > .stackable.grid.container > h3{
  margin-top: 0;
  font-weight: @headerFontWeight;
  padding-left: @distanceL;
}

// Buttons
.flexberry-edit-panel {
  .ui.button:first-child {
    padding-left: 0;
  }
}

.flexberry-edit-panel .ui.button.save-button,
.flexberry-edit-panel .ui.button.save-close-button,
.flexberry-edit-panel .ui.button.save-del-button,
.flexberry-edit-panel .ui.button.close-button {
  background: @editBackground;
  font-weight: @buttonFontWeight; 
  color: @editButtonsColor;
  &:focus {
    border: @toolbarButtonFocusBorder;
  }
}

// Icons

.ui.button.save-button::before {
    // TODO: Добавить иконку дискеты с макета
    content: @saveIcon;
    font-family: outline-icons;
    font-size: @iconFontSize;
    padding-right: @iconPadding;
}
    
.ui.button.save-close-button {
    position: relative;
    &::before {
        content: @saveIcon;
        font-family: outline-icons;
        font-size: @iconFontSize;
        padding-right: @iconPadding;
    }

    // Убрать, когда появится иконка Сохранить и закрыть
    &::after {
        content: @successIcon;
        font-family: @iconFontFamily;
        font-size: @iconFontSize;
        position: absolute;
        left: 1.2em;
        top: 0.2em;
    }
}

.ui.button.save-del-button::before {
    content: @deleteIcon;
    font-family: @iconFontFamily;
    font-size: @iconFontSize;
    padding-right: @iconPadding;
}

.ui.button.close-button {
    font-size: 0;
    float: right;
    line-height: @distanceM;
    padding-top: @closeButtonPaddingTop;
    &::before {
        // TODO: Нужно исправить иконку крестика в шрифте guideline-icons, сейчас с большими полями
        content: @closeIcon;
        font-family: 'Crimean';
        font-size: 12px;
        font-weight: 700;
    }
}

.ui.input textarea {
    line-height: @textareaLineHeight;
    font-family: @pageFont;
}

.ui.input textarea:hover {
    border-color: @textareaHoverBorderColor;
}

.ui.input textarea[readonly],
.ui.input textarea[disabled] {
    pointer-events: none;
    background: @textareaReadonlyBackground;
    border-color: @textareaReadonlyBorderColor;
}

.ui.input textarea:focus,
.ui.input textarea:active {
    border-color: @defaultFocusBorderColor;
}

/* Error field */
.ui.form .fields.error .field,
.ui.form .field.error {
  .ui.basic.red.label {
    background-color: @formErrorLabelBackground !important;
    border: @formErrorLabelBorder;
    color: @formErrorLabelColor !important;
    font-size: @formErrorLabelFontSize;
    font-weight: @formErrorLabelFontWeight;
    margin-top: @formErrorLabelMargin;
    padding: @formErrorLabelPadding;
    &:before {
      display: @formErrorLabelCornerDisplay;
    }
  }
  
  .flexberry-simpledatetime > .ui.action.input:not([class*="left action"]) > input,
  .flexberry-lookup>.ui.action.input:not([class*="left action"]) > input.lookup-field {
    &,
    &:hover,
    &:focus {
      border-right-color: @formErrorBorder!important;
    }
  }

  .flexberry-file .ui.action.input:not([class*="left action"]) {
    border-right: none;
    > .ui.button.flexberry-file-add-button {
      background-color: @formErrorBackground;
      border-color: @formErrorBorder;
      border-left: none;
      color: @secondaryColor;
      &:hover {
        color: @textColor;
      }
    }
  }
}
