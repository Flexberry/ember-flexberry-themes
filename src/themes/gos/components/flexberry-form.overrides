// Main
.ui.main.container > .stackable.grid.container > .row,
.ui.form.flexberry-vertical-form {
  padding: @formPadding;
  padding-bottom: @formHorizontalPaddding;
}

.ui.main.container > .stackable.grid.container > .row {
  padding-top: @formVerticalPadding;
}

// Fix for ie
// https://github.com/philipwalton/flexbugs/issues/216#issuecomment-359042902
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .ui.main.container > .stackable.grid.container > .row,
  #lookup-list {
    display: flex;
  }
  .flexberry-objectlistview {
    width: 100%;
  }
}

.flexberry-content.ui.attached.segment {
  padding: @flexberryContentPadding;
}

.ui.main.container,
.stackable.grid.container {
  height: 100%
}

// Headers
.ui.main.container > .stackable.grid.container {
  padding-top: @formVerticalPadding;

  > h3 {
    font-weight: @headerFontWeight;
    padding-left: @formHorizontalPaddding;

    &:first-of-type {
      background: @formHeaderBackground;
      padding: @formHeaderPadding;
      margin: @formHeaderMargin;
    }
  }
}

// Buttons
.flexberry-edit-panel {
  .ui.button:first-child {
    padding-left: 0;
  }
}

.flexberry-edit-panel .ui.button.save-button,
.flexberry-edit-panel .ui.button.save-close-button,
.flexberry-edit-panel .ui.button.save-del-button,
.flexberry-edit-panel .ui.button.close-button {
  background: @pageBackground;
  font-weight: @buttonFontWeight; 
  color: @editButtonsColor;
  &:focus {
    border-color: transparent;
  }
}

// Icons

.ui.button.save-button::before {
    // TODO: Добавить иконку дискеты с макета
    content: @saveIcon;
    font-family: outline-icons;
    font-size: @iconFontSize;
    padding-right: @iconPadding;
}
    
.ui.button.save-close-button {
    position: relative;
    &::before {
        content: @saveIcon;
        font-family: outline-icons;
        font-size: @iconFontSize;
        padding-right: @iconPadding;
    }

    // Убрать, когда появится иконка Сохранить и закрыть
    &::after {
        content: @successIcon;
        font-family: @iconFontFamily;
        font-size: @iconFontSize;
        position: absolute;
        left: 1.2em;
        top: 0.2em;
    }
}

.ui.button.save-del-button::before {
    content: @deleteIcon;
    font-family: @iconFontFamily;
    font-size: @iconFontSize;
    padding-right: @iconPadding;
}

.ui.button.close-button {
    font-size: 0;
    float: right;
    line-height: @distanceM;
    padding-top: @closeButtonPaddingTop;
    &::before {
        // TODO: Нужно исправить иконку крестика в шрифте guideline-icons, сейчас с большими полями
        content: @closeIcon;
        font-family: 'Crimean';
        font-size: 12px;
        font-weight: 700;
    }
}

.ui.input textarea {
    line-height: @textareaLineHeight;
    font-family: @pageFont;
}

.ui.input textarea:hover {
    border-color: @textareaHoverBorderColor;
}

.ui.input textarea[readonly],
.ui.input textarea[disabled] {
    pointer-events: none;
    background: @textareaReadonlyBackground;
    border-color: @textareaReadonlyBorderColor;
}

.ui.input textarea:focus,
.ui.input textarea:active {
    border-color: @defaultFocusBorderColor;
}

.ui.large.input > textarea {
  font-size: @inputLargeFontSize;
}

/* Error field */
.ui.form .fields.error .field,
.ui.form .field.error {
  .ui.basic.red.label {
    background-color: @formErrorLabelBackground !important;
    border: @formErrorLabelBorder;
    color: @formErrorLabelColor !important;
    font-size: @formErrorLabelFontSize;
    font-weight: @formErrorLabelFontWeight;
    margin-top: @formErrorLabelMargin;
    padding: @formErrorLabelPadding;
    &:before {
      display: @formErrorLabelCornerDisplay;
    }
  }
  
  .flexberry-simpledatetime > .ui.action.input:not([class*="left action"]) > input,
  .flexberry-lookup>.ui.action.input:not([class*="left action"]) > input.lookup-field {
    &,
    &:hover,
    &:focus {
      border-right-color: @formErrorBorder!important;
    }
  }
}

.flexberry-file.disabled .field.error.ui.action.input:not([class*="left action"]) > input {
  border-right-color: @formErrorBorder !important;
}

.flexberry-file {
  .field.field.error.ui.action.input:not([class*="left action"]),
  .ui.form .fields.error .field & .ui.action.input:not([class*="left action"]),
  .ui.form .field.error & .ui.action.input:not([class*="left action"]) {
    border-right: none;
    > .ui.button.flexberry-file-add-button {
      background-color: @formErrorBackground;
      border-color: @formErrorBorder;
      border-left: none;
      color: @secondaryColor;
      &:hover {
        color: @textColor;
      }
    }
  }
}

.ui.form .field.error > .field {
  margin-bottom: 0;
}

.ui.form .field > .ui.selection.dropdown {
  min-width: 0;
}

.flexberry-vertical-form {
  > .ui.two.column.grid {
    max-width: 1098px;
    margin-bottom: 0;
  }
  
  > .ui.one.column.grid {
    max-width: 517px;
    margin-bottom: 0;
  }
}

/*-------------------
    Labeled inside
--------------------*/
.ui.form .labeled-inside.field {
  textarea,
  .ui.input > input {
    padding-top: @fieldLabeledInsidePaddingTop;

    &::placeholder,
    &::-webkit-input-placeholder {
      color: transparent;
    }

    &::-ms-input-placeholder {
      color: transparent;
    }

    &:-ms-input-placeholder {
      color: transparent !important; /* IE11 needs the !important flag */
    }
  }
}

.ui.form .labeled-inside.field .ui.selection.dropdown {
  padding-top: @fieldLabeledInsidePaddingTop;
  
  > .default.text {
    color: transparent;
  }

  > .dropdown.icon {
    padding-top: 0;
    margin-top: auto;
    margin-bottom: auto;
    padding-bottom: 0;
    line-height: 1.5;
  }
}

.ui.form .labeled-inside.field > label {
    height: 0px;
    width: 0px;
    white-space: nowrap;
    position: relative;
    z-index: 3;
    pointer-events: none;
    color: @fieldLabeledInsideLabelColor;
    transition: @fieldLabeledInsideLabelTransition;
    line-height: @fieldLabeledInsideLabelLineHeight;
    top: @fieldLabeledInsideLabelTop;
    margin: @fieldLabeledInsideLabelMargin;
}

.ui.form .labeled-inside.has-text.field > label {
    transform-origin: @fieldLabeledInsideLabelAwayTransformOrigin;
    transform: @fieldLabeledInsideLabelAwayTransform;
}

// Large labeled inside
.ui.large.labeled-inside.field > .ui.input > input {
    padding: @fieldLargeLabeledInsidePadding;
}

.ui.large.labeled-inside.field > label {
    font-size: @fieldLargeLabeledInsideLabelFontSize;
    line-height: @fieldLargeLabeledInsideLabelLineHeight;
    top: @fieldLargeLabeledInsideLabelTop;
    margin: @fieldLargeLabeledInsideLabelMargin;
}

.ui.large.labeled-inside.has-text.field > label,
.ui.large.labeled-inside.field:focus-within > label {
    transform: @fieldLargeLabeledInsideLabelAwayTransform;
}

.ui.form .ui.input.error input {
  background-color: @formErrorBackground;
  border-color: @formErrorBorder;
  color: @formErrorColor;
}

.ui.form .field > label.sidepage-open {
  background: transparent;
  font-size: @labelOpenSidePageFontSize;
  line-height: @labelOpenSidePageLineHeight;
  border-bottom: @labelOpenSidePageBorderBottom;
  text-align: left;
}

/*-------------------
      Mobile
--------------------*/
.pusher.mobile .ui.main.container > .stackable.grid.container > .row {
  padding-left: 0;
  padding-right: 0;
  padding-bottom: 0;
}

.pusher.mobile .ui.main.container > .stackable.grid.container {
  > h3 {
    padding-left: @formHorizontalMobilePaddding;

    &:first-of-type {
      padding: @formHeaderMobilePadding;
      line-height: @formHeaderMobileLineHeight;
    }
  }
}
